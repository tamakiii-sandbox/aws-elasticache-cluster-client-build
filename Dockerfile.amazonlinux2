FROM amazonlinux:${OS_VERSION:-2}

SHELL ["/bin/bash", "-c"]

# can be 7.1 or later:
ARG PHP_VERSION=8.0
# set to 1 to enable:
ARG ENABLE_IGBINARY=0
# set to 1 to enable:
ARG ENABLE_MSGPACK=0
# set to 1 to enable:
ARG ENABLE_JSON=0

RUN yum update -y && \
    yum install -y \
        patch \
        make \
        gcc \
        gcc-c++ \
        autoconf \
        automake \
        libtool \
        pkgconfig \
        zlib \
        zlib-devel \
        cyrus-sasl-devel

RUN amazon-linux-extras enable php$PHP_VERSION && \
	  yum clean metadata

RUN yum -y install php-devel php-fpm \
    && if [ $ENABLE_IGBINARY -eq 1 ]; then yum -y install php-igbinary-devel; fi \
    && if [ $ENABLE_MSGPACK -eq 1 ]; then yum -y install php-pecl-msgpack-devel; fi

RUN yum clean all && \
    rm -rf /var/cache/yum/*

RUN mkdir /build

COPY aws-elasticache-cluster-client-libmemcached /build/aws-elasticache-cluster-client-libmemcached
COPY aws-elasticache-cluster-client-memcached-for-php /build/aws-elasticache-cluster-client-memcached-for-php
COPY *.patch /build/

RUN cd /build/aws-elasticache-cluster-client-libmemcached \
    && for F in /build/*.patch; do patch -p1 -i "$F"; done \
    && autoreconf -i \
    && mkdir BUILD \
    && cd BUILD \
    && ../configure --prefix=/usr/local --with-pic --disable-sasl \
    && make -j`nproc` \
    && make install

RUN cd /build/aws-elasticache-cluster-client-memcached-for-php \
    && phpize \
    && ./configure \
        --with-pic \
        --disable-memcached-sasl \
        --enable-memcached-session \
        `if [ $ENABLE_JSON -eq 1 ]; then echo "--enable-memcached-json"; fi` \
        `if [ $ENABLE_MSGPACK -eq 1 ]; then echo "--enable-memcached-msgpack"; fi` \
        `if [ $ENABLE_IGBINARY -eq 1 ]; then echo "--enable-memcached-igbinary"; fi` \
    && sed -i "s#-lmemcached#/usr/local/lib/libmemcached.a -lcrypt -lpthread -lm -lstdc++ -lsasl2#" Makefile \
    && sed -i "s#-lmemcachedutil#/usr/local/lib/libmemcachedutil.a#" Makefile \
    && make -j`nproc` \
    && make install

# clean slate for checks:
RUN rm -rf /build

# check that the PHP extension can be loaded:
RUN php -v \
    && php -dextension=memcached.so -m | grep 'memcached' \
    && php -dextension=memcached.so -r 'new Memcached();' \
    && php -dextension=memcached.so -r 'if (!defined("Memcached::DYNAMIC_CLIENT_MODE")) exit(1);'

RUN php-fpm -v \
    && php-fpm -dextension=memcached.so -m | grep 'memcached'

RUN mkdir -p /build/final \
    && cp -p `find /usr/lib64/php/modules/ -name memcached.so` /build/final/
